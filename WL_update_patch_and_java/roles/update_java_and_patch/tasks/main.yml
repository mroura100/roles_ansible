---
# tasks file for WL_update_patch_and_java
- name : Copy the JDK and Weblogic Installation files to ORACLE_HOME
  tags: updateJava
  become: true
  copy:
    src: "{{ item }}"
    dest: "{{ software_config_files }}"
    mode: 0755
  with_items:
    - "server-jre-8u191-linux-x64.tar.gz"
    

- name : unarchive new java on {{ software_config_files }}
  tags: updateJava
  become: true
  unarchive:
    remote_src: true
    src: "{{ software_config_files }}server-jre-8u191-linux-x64.tar.gz"
    dest: "{{ java_dir }}"
  

- name: Unlink old Java
  tags: updateJava
  file:
    src: "{{ java_dir }}jdk1.8.0_191"
    dest: "{{ java_dir }}jdk"
    state: absent

- name: Create a symbolic link of new java
  tags: updateJava
  file:
    src: "{{ java_dir }}jdk1.8.0_191"
    dest: "{{ java_dir }}jdk"
    state: link

#- name: Stop all services of Weblogic
#  tags: stopServices
#  become: true
#  become_user: "{{ user }}"
#  shell: "{{ item }}"
#  with_items:
#    - "{{ domain_root_directory }}{{ domain_name }}/bin/stopWebLogic.sh"
#    - "{{ domain_root_directory }}{{ domain_name }}/bin/stopNodeManager.sh"


- name: set the SSL listener to false in nodemanager.properties file
  tags: replaceline,updateJava
  become: true
  become_user: "{{ user }}"
  replace:
    path: '{{item.src}}'
    regexp: '\/\opt\/\jdk1.8.0_181'
    replace: '/opt/jdk'
  register: replaceline
  with_items:
     - { src: "{{ oracle_home }}/oui/.globalEnv.properties"} 
     - { src: "{{ domain_root_directory }}{{ domain_name }}/bin/setNMJavaHome.sh"}
     - { src: "{{ domain_root_directory }}{{ domain_name }}/bin/setDomainEnv.sh"}
     - { src: "{{ domain_root_directory }}{{ domain_name }}/nodemanager/nodemanager.properties"}
     

- name: Create a backup directory if it does not exist
  tags: backup 
  become: true
  file:
    path: /serveis/WL12/backup/
    state: directory
    mode: '0775'
    owner: "{{ user }}" 

- name: Create a WebLogic backup
  tags: backup 
  become: true
  become_user: "{{ user }}" 
  archive:
    path: /u01
    dest: /serveis/WL12/backup/all_WL12.tgz

- name : Copy Files to update WebLogic
  tags: updatePatchWebLogic
  become: true
  become_user: "{{ user }}"
  copy:
    src: "{{ item }}"
    dest: "{{ PathOpatchUpdate }}"
    mode: 0755
  with_items:
    - "opatch_generic.jar"
    - "p34991973_122130_Generic.zip"
    - "server-jre-8u191-linux-x64.tar.gz"

- name: Check Opatch version
  tags: opatchVersion,updatePatchWebLogic
  become: true
  become_user: "{{ user }}"
  shell: "source /home/{{ user }}/.bash_profile;{{ opatch_path }}opatch version -jre $JAVA_HOME"
  register: opatchVersion

- name: La version del opatch es
  tags: opatchVersion,updatePatchWebLogic
  debug:
    msg: " {{ opatchVersion.stdout_lines[0] }}"

- name: Unarchive patch file
  tags: updatePatchWebLogic
  become: true
  become_user: "{{ user }}"
  unarchive:
    remote_src: true
    src: "{{ PathOpatchUpdate }}p34991973_122130_Generic.zip"
    dest: "{{ PathOpatchUpdate }}"


- name: Update Opatch
  tags: updatePatchWebLogic
  become: true
  become_user: "{{ user }}"
  shell: source /home/{{ user }}/.bash_profile;java -jar {{ PathOpatchUpdate }}opatch_generic.jar -silent oracle_home={{ oracle_home }};{{ opatch_path }}opatch version -jre $JAVA_HOME
  register: newOpatchVersion
  #when: opatchVersion.stdout_lines[0] != {{ opatchRequiredVersion }}

- name: La version del opatch es
  tags: opatchVersion,updatePatchWebLogic
  debug:
    msg: " {{ newOpatchVersion }}"

- name: Precheck update WL 
  tags: updatePatchWebLogic
  become: true
  become_user: "{{ user }}"
  shell: source /home/{{ user }}/.bash_profile;cd /home/proves/patch/WLS_SPB_12.2.1.3.230118/tools/spbat/generic/SPBAT;./spbat.sh -phase precheck -oracle_home {{ oracle_home }}
  register: precheck

- name: Precheck result
  tags: opatchVersion,updatePatchWebLogic
  debug:
    msg: " {{ precheck }}"


- name: Apply Patch WL 
  tags: updatePatchWebLogic
  become: true
  become_user: "{{ user }}"
  shell: source /home/{{ user }}/.bash_profile;cd /home/proves/patch/WLS_SPB_12.2.1.3.230118/tools/spbat/generic/SPBAT;./spbat.sh -phase apply -oracle_home {{ oracle_home }}
  register: update

- name: Precheck result
  tags: opatchVersion,updatePatchWebLogic
  debug:
    msg: " {{ update }}"
